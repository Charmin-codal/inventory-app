{
  "openapi": "3.0.0",
  "info": {
    "title": "Inventory Management API",
    "description": "API documentation for the Inventory Management System",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and registration endpoints"
    },
    {
      "name": "Items",
      "description": "Inventory item management endpoints"
    },
    {
      "name": "Cart",
      "description": "Shopping cart management endpoints"
    },
    {
      "name": "Wishlist",
      "description": "User wishlist management endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Local development server"
    },
    {
      "url": "https://inventory-app-zffs.onrender.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The auto-generated id of the item"
          },
          "name": {
            "type": "string",
            "description": "The name of the item"
          },
          "description": {
            "type": "string",
            "description": "The description of the item"
          },
          "price": {
            "type": "number",
            "format": "float",
            "description": "The price of the item"
          },
          "quantity": {
            "type": "integer",
            "description": "The available quantity of the item"
          },
          "category": {
            "type": "string",
            "description": "The category of the item"
          },
          "image_url": {
            "type": "string",
            "description": "The URL of the item image"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "The last update timestamp"
          }
        },
        "required": ["name", "price", "quantity"]
      },
      "ItemInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Product Name",
            "description": "Name of the item"
          },
          "description": {
            "type": "string",
            "example": "Product description",
            "description": "Description of the item"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99,
            "description": "Price of the item"
          },
          "quantity": {
            "type": "integer",
            "example": 10,
            "description": "Available quantity"
          },
          "category": {
            "type": "string",
            "example": "Electronics",
            "description": "Category of the item"
          },
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Image file of the item (jpg, jpeg, png, gif)"
          }
        },
        "required": ["name", "price", "quantity"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        },
        "required": ["username", "email", "password"]
      },
      "LoginInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "password123"
          }
        },
        "required": ["email", "password"]
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "itemId": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "WishlistItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "itemId": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "description": "Creates a new user account",
        "operationId": "registerUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticates a user and returns a JWT token",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user",
        "description": "Retrieves the currently authenticated user's information",
        "operationId": "getCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/items": {
      "get": {
        "tags": ["Items"],
        "summary": "Get all items",
        "description": "Retrieves a list of all items in the inventory",
        "operationId": "getItems",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Items"],
        "summary": "Create a new item",
        "description": "Adds a new item to the inventory",
        "operationId": "createItem",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/items/{id}": {
      "put": {
        "tags": ["Items"],
        "summary": "Update an item",
        "description": "Updates an existing item in the inventory",
        "operationId": "updateItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the item to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item updated"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Items"],
        "summary": "Delete an item",
        "description": "Removes an item from the inventory",
        "operationId": "deleteItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the item to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item deleted"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/wishlist": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get user's wishlist",
        "description": "Retrieves the current user's wishlist items",
        "operationId": "getWishlist",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WishlistItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/wishlist/add": {
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add item to wishlist",
        "description": "Adds an item to the user's wishlist",
        "operationId": "addToWishlist",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "itemId": {
                    "type": "integer"
                  }
                },
                "required": ["itemId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to wishlist successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WishlistItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/wishlist/{itemId}": {
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Remove item from wishlist",
        "description": "Removes an item from the user's wishlist",
        "operationId": "removeFromWishlist",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the item to remove from wishlist"
          }
        ],
        "responses": {
          "200": {
            "description": "Item removed from wishlist successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item removed from wishlist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get cart items",
        "description": "Retrieves all items in the user's cart",
        "operationId": "getCartItems",
        "responses": {
          "200": {
            "description": "Cart items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CartItem"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Cart"],
        "summary": "Add item to cart",
        "description": "Adds an item to the cart",
        "operationId": "addToCart",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "integer"
                  },
                  "quantity": {
                    "type": "integer"
                  }
                },
                "required": ["itemId", "quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItem"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/{id}": {
      "put": {
        "tags": ["Cart"],
        "summary": "Update cart item",
        "description": "Updates the quantity of an item in the cart",
        "operationId": "updateCartItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the cart item to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer"
                  }
                },
                "required": ["quantity"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CartItem"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Cart"],
        "summary": "Remove item from cart",
        "description": "Removes an item from the cart",
        "operationId": "removeFromCart",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the cart item to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Item removed from cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Item removed from cart"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
